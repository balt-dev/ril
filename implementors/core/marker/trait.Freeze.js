(function() {var implementors = {
"ril":[["impl Freeze for <a class=\"enum\" href=\"ril/enum.BorderPosition.html\" title=\"enum ril::BorderPosition\">BorderPosition</a>",1,["ril::draw::BorderPosition"]],["impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"ril/struct.Border.html\" title=\"struct ril::Border\">Border</a>&lt;P&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,</span>",1,["ril::draw::Border"]],["impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"ril/struct.Rectangle.html\" title=\"struct ril::Rectangle\">Rectangle</a>&lt;P&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,</span>",1,["ril::draw::Rectangle"]],["impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"ril/struct.Ellipse.html\" title=\"struct ril::Ellipse\">Ellipse</a>&lt;P&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,</span>",1,["ril::draw::Ellipse"]],["impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"ril/struct.Paste.html\" title=\"struct ril::Paste\">Paste</a>&lt;P&gt;",1,["ril::draw::Paste"]],["impl&lt;P, R&gt; Freeze for <a class=\"enum\" href=\"ril/enum.DynamicFrameIterator.html\" title=\"enum ril::DynamicFrameIterator\">DynamicFrameIterator</a>&lt;P, R&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,</span>",1,["ril::encode::DynamicFrameIterator"]],["impl Freeze for <a class=\"struct\" href=\"ril/encodings/gif/struct.GifEncoder.html\" title=\"struct ril::encodings::gif::GifEncoder\">GifEncoder</a>",1,["ril::encodings::gif::GifEncoder"]],["impl&lt;P, R&gt; Freeze for <a class=\"struct\" href=\"ril/encodings/gif/struct.GifDecoder.html\" title=\"struct ril::encodings::gif::GifDecoder\">GifDecoder</a>&lt;P, R&gt;",1,["ril::encodings::gif::GifDecoder"]],["impl&lt;P, R&gt; Freeze for <a class=\"struct\" href=\"ril/encodings/gif/struct.GifFrameIterator.html\" title=\"struct ril::encodings::gif::GifFrameIterator\">GifFrameIterator</a>&lt;P, R&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,</span>",1,["ril::encodings::gif::GifFrameIterator"]],["impl Freeze for <a class=\"struct\" href=\"ril/encodings/jpeg/struct.JpegEncoder.html\" title=\"struct ril::encodings::jpeg::JpegEncoder\">JpegEncoder</a>",1,["ril::encodings::jpeg::JpegEncoder"]],["impl&lt;P, R&gt; Freeze for <a class=\"struct\" href=\"ril/encodings/jpeg/struct.JpegDecoder.html\" title=\"struct ril::encodings::jpeg::JpegDecoder\">JpegDecoder</a>&lt;P, R&gt;",1,["ril::encodings::jpeg::JpegDecoder"]],["impl Freeze for <a class=\"struct\" href=\"ril/encodings/png/struct.PngEncoder.html\" title=\"struct ril::encodings::png::PngEncoder\">PngEncoder</a>",1,["ril::encodings::png::PngEncoder"]],["impl&lt;P, R&gt; Freeze for <a class=\"struct\" href=\"ril/encodings/png/struct.PngDecoder.html\" title=\"struct ril::encodings::png::PngDecoder\">PngDecoder</a>&lt;P, R&gt;",1,["ril::encodings::png::PngDecoder"]],["impl&lt;P, R&gt; Freeze for <a class=\"struct\" href=\"ril/encodings/png/struct.ApngFrameIterator.html\" title=\"struct ril::encodings::png::ApngFrameIterator\">ApngFrameIterator</a>&lt;P, R&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,</span>",1,["ril::encodings::png::ApngFrameIterator"]],["impl Freeze for <a class=\"enum\" href=\"ril/encodings/webp/enum.WebPQuality.html\" title=\"enum ril::encodings::webp::WebPQuality\">WebPQuality</a>",1,["ril::encodings::webp::WebPQuality"]],["impl Freeze for <a class=\"struct\" href=\"ril/encodings/webp/struct.WebPEncoder.html\" title=\"struct ril::encodings::webp::WebPEncoder\">WebPEncoder</a>",1,["ril::encodings::webp::WebPEncoder"]],["impl&lt;P, R&gt; Freeze for <a class=\"struct\" href=\"ril/encodings/webp/struct.WebPDecoder.html\" title=\"struct ril::encodings::webp::WebPDecoder\">WebPDecoder</a>&lt;P, R&gt;",1,["ril::encodings::webp::WebPDecoder"]],["impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"ril/encodings/webp/struct.WebPSequenceDecoder.html\" title=\"struct ril::encodings::webp::WebPSequenceDecoder\">WebPSequenceDecoder</a>&lt;P&gt;",1,["ril::encodings::webp::WebPSequenceDecoder"]],["impl Freeze for <a class=\"enum\" href=\"ril/enum.ColorType.html\" title=\"enum ril::ColorType\">ColorType</a>",1,["ril::encodings::ColorType"]],["impl Freeze for <a class=\"enum\" href=\"ril/enum.Error.html\" title=\"enum ril::Error\">Error</a>",1,["ril::error::Error"]],["impl Freeze for <a class=\"enum\" href=\"ril/prelude/enum.OverlayMode.html\" title=\"enum ril::prelude::OverlayMode\">OverlayMode</a>",1,["ril::image::OverlayMode"]],["impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"ril/prelude/struct.Image.html\" title=\"struct ril::prelude::Image\">Image</a>&lt;P&gt;",1,["ril::image::Image"]],["impl Freeze for <a class=\"enum\" href=\"ril/prelude/enum.ImageFormat.html\" title=\"enum ril::prelude::ImageFormat\">ImageFormat</a>",1,["ril::image::ImageFormat"]],["impl Freeze for <a class=\"struct\" href=\"ril/pixel/struct.NoOp.html\" title=\"struct ril::pixel::NoOp\">NoOp</a>",1,["ril::pixel::NoOp"]],["impl Freeze for <a class=\"struct\" href=\"ril/pixel/struct.NoOpSubpixel.html\" title=\"struct ril::pixel::NoOpSubpixel\">NoOpSubpixel</a>",1,["ril::pixel::NoOpSubpixel"]],["impl Freeze for <a class=\"struct\" href=\"ril/struct.BitPixel.html\" title=\"struct ril::BitPixel\">BitPixel</a>",1,["ril::pixel::BitPixel"]],["impl Freeze for <a class=\"struct\" href=\"ril/struct.L.html\" title=\"struct ril::L\">L</a>",1,["ril::pixel::L"]],["impl Freeze for <a class=\"struct\" href=\"ril/struct.Rgb.html\" title=\"struct ril::Rgb\">Rgb</a>",1,["ril::pixel::Rgb"]],["impl Freeze for <a class=\"struct\" href=\"ril/struct.Rgba.html\" title=\"struct ril::Rgba\">Rgba</a>",1,["ril::pixel::Rgba"]],["impl Freeze for <a class=\"enum\" href=\"ril/enum.DynamicSubpixel.html\" title=\"enum ril::DynamicSubpixel\">DynamicSubpixel</a>",1,["ril::pixel::DynamicSubpixel"]],["impl Freeze for <a class=\"enum\" href=\"ril/enum.Dynamic.html\" title=\"enum ril::Dynamic\">Dynamic</a>",1,["ril::pixel::Dynamic"]],["impl&lt;'p&gt; Freeze for <a class=\"struct\" href=\"ril/struct.PalettedRgb.html\" title=\"struct ril::PalettedRgb\">PalettedRgb</a>&lt;'p&gt;",1,["ril::pixel::PalettedRgb"]],["impl&lt;'p&gt; Freeze for <a class=\"struct\" href=\"ril/struct.PalettedRgba.html\" title=\"struct ril::PalettedRgba\">PalettedRgba</a>&lt;'p&gt;",1,["ril::pixel::PalettedRgba"]],["impl Freeze for <a class=\"enum\" href=\"ril/prelude/enum.ResizeAlgorithm.html\" title=\"enum ril::prelude::ResizeAlgorithm\">FilterType</a>",1,["ril::resize::FilterType"]],["impl Freeze for <a class=\"enum\" href=\"ril/enum.DisposalMethod.html\" title=\"enum ril::DisposalMethod\">DisposalMethod</a>",1,["ril::sequence::DisposalMethod"]],["impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"ril/struct.Frame.html\" title=\"struct ril::Frame\">Frame</a>&lt;P&gt;",1,["ril::sequence::Frame"]],["impl Freeze for <a class=\"enum\" href=\"ril/enum.LoopCount.html\" title=\"enum ril::LoopCount\">LoopCount</a>",1,["ril::sequence::LoopCount"]],["impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"ril/struct.ImageSequence.html\" title=\"struct ril::ImageSequence\">ImageSequence</a>&lt;P&gt;",1,["ril::sequence::ImageSequence"]],["impl Freeze for <a class=\"struct\" href=\"ril/struct.Font.html\" title=\"struct ril::Font\">Font</a>",1,["ril::text::Font"]],["impl Freeze for <a class=\"enum\" href=\"ril/enum.WrapStyle.html\" title=\"enum ril::WrapStyle\">WrapStyle</a>",1,["ril::text::WrapStyle"]],["impl&lt;'a, P&gt; Freeze for <a class=\"struct\" href=\"ril/struct.TextSegment.html\" title=\"struct ril::TextSegment\">TextSegment</a>&lt;'a, P&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,</span>",1,["ril::text::TextSegment"]],["impl Freeze for <a class=\"enum\" href=\"ril/enum.HorizontalAnchor.html\" title=\"enum ril::HorizontalAnchor\">HorizontalAnchor</a>",1,["ril::text::HorizontalAnchor"]],["impl Freeze for <a class=\"enum\" href=\"ril/enum.VerticalAnchor.html\" title=\"enum ril::VerticalAnchor\">VerticalAnchor</a>",1,["ril::text::VerticalAnchor"]],["impl&lt;'a, P&gt; Freeze for <a class=\"struct\" href=\"ril/struct.TextLayout.html\" title=\"struct ril::TextLayout\">TextLayout</a>&lt;'a, P&gt;",1,["ril::text::TextLayout"]]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()